#!/bin/bash

set -e

if [  ! $# -eq 1 ];then
	echo "Error: Invalid parameter: $#."
	echo "Usage: $0 Proj_Dir"
	exit -1
fi

PROJECT_DIR=$1
if [ ! -d $PROJECT_DIR ];then
	echo "Error: Invalid Proj_Dir: $PROJECT_DIR"
	exit -1
fi
PROJECT_DIR=`realpath "$PROJECT_DIR"`
PROJECT_NAME=${PROJECT_DIR##*/}

USER_NAME=`whoami`
HOME_DIR=/home/$USER_NAME

#DOCKER_RUN_NAME="${DOCKER_IMAGE_NAME}_debug"

echo PROJECT_DIR=$PROJECT_DIR
echo PROJECT_NAME=$PROJECT_NAME
echo DOCKER_BUILD_NAME=$DOCKER_BUILD_NAME
echo HOST_NAME=${HOST_NAME}
echo "BUILD_DOCKER_FOLDER_MAP=$BUILD_DOCKER_FOLDER_MAP"

FOLDER_MAP=" -v $HOME_DIR:$HOME_DIR "

#Auto run script to build docker
HOST_SCRIPT_DIR=$PROJECT_DIR
DOCKER_SCRIPT_DIR=/bin/docker/$PROJECT_NAME
DOCKER_SCRIPT=setupEnv.sh
echo "auto run in Docker: cd $DOCKER_SCRIPT_DIR && ./$DOCKER_SCRIPT"
FOLDER_MAP+="-v ${HOST_SCRIPT_DIR}:${DOCKER_SCRIPT_DIR} "

if [ ! -f $HOST_SCRIPT_DIR/$DOCKER_SCRIPT ];then
    echo "Error : Can't find the auto run script : $HOST_SCRIPT_DIR/$DOCKER_SCRIPT"
    exit -1
fi
FOLDER_MAP+=$BUILD_DOCKER_FOLDER_MAP

if [ -z ${DOCKER_RUN_NAME} ];then
    DOCKER_RUN_NAME=${DOCKER_IMAGE_NAME}
fi
DOCKER_RUN_NAME=${DOCKER_RUN_NAME//\./_}
HOST_NAME=" -h ${DOCKER_RUN_NAME} "

# install docker
DOCKER_VERSION="$(docker --version | grep $Docker version)"
if [ -z "$DOCKER_VERSION" ];then
    echo please install the package: docker first
    exit -1
fi

#Check if the image is already exist.
imageExistFlag="$(docker images $DOCKER_IMAGE_NAME:0.2 | grep $DOCKER_IMAGE_NAME)" || true
if [ ! -z "$imageExistFlag" ]; then
    echo "------------------------------------------------------------------------------"
    echo "Warning --  dokcer image: $DOCKER_IMAGE_NAME:0.2 already exist!"
    echo "------------------------------------------------------------------------------"
    exit 1
fi

if [ ! $USE_GUI_IN_DOCKER == 0 ]; then
    if [ ! -f /etc/.x11_apt_done ]; then
        sudo apt update || true
        sudo apt install -y x11-utils
        sudo touch /etc/.x11_apt_done
    fi
    
fi

#-----------------------------------------------------------------------------
# create docker_image:0.1
#-----------------------------------------------------------------------------
# We will create a user in the docker with the following param:
USER_ID=`id -u`
GROUP_ID=`id -g`
PASSWORD="12345678"

createDockerFile (){
    rm -rf $2
    cp -f $1 $2
    sed -i "s#LINUX:VERSION#${BASE_DOCKER_IMAGE}#g" $2
    sed -i "s/USER_NAME/$USER_NAME/g" $2
    sed -i "s/USER_ID/$USER_ID/g" $2
    sed -i "s/GROUP_ID/$GROUP_ID/g" $2
    sed -i "s/PASSWORD/$PASSWORD/g" $2
}

#Check if the image is already exist.
imageExistFlag="$(docker images $DOCKER_IMAGE_NAME:0.1 | grep $DOCKER_IMAGE_NAME)" || true
if [ -z "$imageExistFlag" ];then
    echo ------------------------------------------------------------------------------
    echo --  building $DOCKER_IMAGE_NAME:0.1
    echo ------------------------------------------------------------------------------
    #Build the docker image.
    
    if [ -f ${PROJECT_DIR}/Dockerfile ]; then
        createDockerFile ${PROJECT_DIR}/Dockerfile Dockerfile.tmp  $USER_NAME $USER_ID  $GROUP_ID $PASSWORD
    else
        createDockerFile Dockerfile Dockerfile.tmp  $USER_NAME $USER_ID  $GROUP_ID $PASSWORD
    fi
	
    docker build -f Dockerfile.tmp -t $DOCKER_IMAGE_NAME:0.1 .
    echo build $DOCKER_IMAGE_NAME:0.1 OK!
    rm Dockerfile.tmp
fi

#-----------------------------------------------------------------------------
# create docker_image:0.2
#-----------------------------------------------------------------------------
TEMP_CONTAINER_NAME="$(date +%s)"
echo "FOLDER_MAP = $FOLDER_MAP"

echo ------------------------------------------------------------------------------
echo --  building $DOCKER_IMAGE_NAME:0.2                                   --
echo ------------------------------------------------------------------------------
echo "auto run in Docker: cd $DOCKER_SCRIPT_DIR && ./$DOCKER_SCRIPT"
echo ""

if [ $BUILD_DEBUG_FLAG == 1 ]; then
    echo docker run -it ${FOLDER_MAP} $HOST_NAME --name "${TEMP_CONTAINER_NAME}" ${DOCKER_IMAGE_NAME}:0.1 bash
    docker run -it ${FOLDER_MAP} $HOST_NAME --name "${TEMP_CONTAINER_NAME}" ${DOCKER_IMAGE_NAME}:0.1 bash
    exit 0
else
    docker run -it ${FOLDER_MAP} --name "${TEMP_CONTAINER_NAME}" ${DOCKER_IMAGE_NAME}:0.1 sh -c "cd $DOCKER_SCRIPT_DIR && ./$DOCKER_SCRIPT"
fi
    
#Save the container to docker image and delete the container.
docker commit -m "build ${DOCKER_IMAGE_NAME}:0.2" ${TEMP_CONTAINER_NAME} $DOCKER_IMAGE_NAME:0.2
docker rm ${TEMP_CONTAINER_NAME}
echo build $DOCKER_IMAGE_NAME:0.2 OK!

