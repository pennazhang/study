# Makefile.in generated by automake 1.9.6 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/mg-samples
pkglibdir = $(libdir)/mg-samples
pkgincludedir = $(includedir)/mg-samples
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = powerpc-unknown-linux-gnu
target_triplet = powerpc-unknown-linux-gnu
noinst_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES =
am__EXEEXT_1 = helloworld$(EXEEXT) mycontrol$(EXEEXT) \
	dialogbox$(EXEEXT) simplekey$(EXEEXT) static$(EXEEXT) \
	button$(EXEEXT) combobox$(EXEEXT) edit$(EXEEXT) \
	listbox$(EXEEXT) menubutton$(EXEEXT) progressbar$(EXEEXT) \
	trackbar$(EXEEXT) newtoolbar$(EXEEXT) propsheet$(EXEEXT) \
	scrollbar$(EXEEXT) painter$(EXEEXT) capture$(EXEEXT) \
	bitblt$(EXEEXT) stretchblt$(EXEEXT) loadbmp$(EXEEXT) \
	drawicon$(EXEEXT) createicon$(EXEEXT) caretdemo$(EXEEXT) \
	cursordemo$(EXEEXT) input$(EXEEXT) bmpbkgnd$(EXEEXT) \
	skindemo$(EXEEXT) scrollwnd$(EXEEXT) scrollwnd2$(EXEEXT) \
	scrollview$(EXEEXT) animation$(EXEEXT) iconview$(EXEEXT) \
	gridview$(EXEEXT) gridview_ext$(EXEEXT) timeeditor$(EXEEXT) \
	listview$(EXEEXT) spinbox$(EXEEXT) monthcal$(EXEEXT) \
	coolbar$(EXEEXT) treeview$(EXEEXT) mywins$(EXEEXT)
am__EXEEXT_2 =
#am__EXEEXT_3 = scrnsaver$(EXEEXT) mginit$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
animation_SOURCES = animation.c
animation_OBJECTS = animation.$(OBJEXT)
animation_DEPENDENCIES =
am_bitblt_OBJECTS = bitblt.$(OBJEXT)
bitblt_OBJECTS = $(am_bitblt_OBJECTS)
bitblt_LDADD = $(LDADD)
am_bmpbkgnd_OBJECTS = bmpbkgnd.$(OBJEXT)
bmpbkgnd_OBJECTS = $(am_bmpbkgnd_OBJECTS)
bmpbkgnd_LDADD = $(LDADD)
am_button_OBJECTS = button.$(OBJEXT)
button_OBJECTS = $(am_button_OBJECTS)
button_LDADD = $(LDADD)
am_capture_OBJECTS = capture.$(OBJEXT)
capture_OBJECTS = $(am_capture_OBJECTS)
capture_LDADD = $(LDADD)
am_caretdemo_OBJECTS = caretdemo.$(OBJEXT)
caretdemo_OBJECTS = $(am_caretdemo_OBJECTS)
caretdemo_LDADD = $(LDADD)
am_combobox_OBJECTS = combobox.$(OBJEXT)
combobox_OBJECTS = $(am_combobox_OBJECTS)
combobox_LDADD = $(LDADD)
am_coolbar_OBJECTS = coolbar.$(OBJEXT)
coolbar_OBJECTS = $(am_coolbar_OBJECTS)
coolbar_DEPENDENCIES =
am_createicon_OBJECTS = createicon.$(OBJEXT)
createicon_OBJECTS = $(am_createicon_OBJECTS)
createicon_LDADD = $(LDADD)
am_cursordemo_OBJECTS = cursordemo.$(OBJEXT)
cursordemo_OBJECTS = $(am_cursordemo_OBJECTS)
cursordemo_LDADD = $(LDADD)
am_dialogbox_OBJECTS = dialogbox.$(OBJEXT)
dialogbox_OBJECTS = $(am_dialogbox_OBJECTS)
dialogbox_LDADD = $(LDADD)
am_drawicon_OBJECTS = drawicon.$(OBJEXT)
drawicon_OBJECTS = $(am_drawicon_OBJECTS)
drawicon_LDADD = $(LDADD)
am_edit_OBJECTS = edit.$(OBJEXT)
edit_OBJECTS = $(am_edit_OBJECTS)
edit_LDADD = $(LDADD)
am_gridview_OBJECTS = gridview.$(OBJEXT)
gridview_OBJECTS = $(am_gridview_OBJECTS)
gridview_DEPENDENCIES =
am_gridview_ext_OBJECTS = gridview_ext.$(OBJEXT)
gridview_ext_OBJECTS = $(am_gridview_ext_OBJECTS)
gridview_ext_DEPENDENCIES =
am_helloworld_OBJECTS = helloworld.$(OBJEXT)
helloworld_OBJECTS = $(am_helloworld_OBJECTS)
helloworld_LDADD = $(LDADD)
am_iconview_OBJECTS = iconview.$(OBJEXT)
iconview_OBJECTS = $(am_iconview_OBJECTS)
iconview_DEPENDENCIES =
am_input_OBJECTS = input.$(OBJEXT)
input_OBJECTS = $(am_input_OBJECTS)
input_LDADD = $(LDADD)
am_listbox_OBJECTS = listbox.$(OBJEXT)
listbox_OBJECTS = $(am_listbox_OBJECTS)
listbox_LDADD = $(LDADD)
am_listview_OBJECTS = listview.$(OBJEXT)
listview_OBJECTS = $(am_listview_OBJECTS)
listview_DEPENDENCIES =
am_loadbmp_OBJECTS = loadbmp.$(OBJEXT)
loadbmp_OBJECTS = $(am_loadbmp_OBJECTS)
loadbmp_LDADD = $(LDADD)
am_menubutton_OBJECTS = menubutton.$(OBJEXT)
menubutton_OBJECTS = $(am_menubutton_OBJECTS)
menubutton_LDADD = $(LDADD)
am_mginit_OBJECTS = mginit.$(OBJEXT)
mginit_OBJECTS = $(am_mginit_OBJECTS)
mginit_LDADD = $(LDADD)
am_monthcal_OBJECTS = monthcal.$(OBJEXT)
monthcal_OBJECTS = $(am_monthcal_OBJECTS)
monthcal_DEPENDENCIES =
am_mycontrol_OBJECTS = mycontrol.$(OBJEXT)
mycontrol_OBJECTS = $(am_mycontrol_OBJECTS)
mycontrol_LDADD = $(LDADD)
am_mywins_OBJECTS = mywins.$(OBJEXT)
mywins_OBJECTS = $(am_mywins_OBJECTS)
mywins_DEPENDENCIES =
am_newtoolbar_OBJECTS = newtoolbar.$(OBJEXT)
newtoolbar_OBJECTS = $(am_newtoolbar_OBJECTS)
newtoolbar_LDADD = $(LDADD)
am_painter_OBJECTS = painter.$(OBJEXT)
painter_OBJECTS = $(am_painter_OBJECTS)
painter_LDADD = $(LDADD)
am_progressbar_OBJECTS = progressbar.$(OBJEXT)
progressbar_OBJECTS = $(am_progressbar_OBJECTS)
progressbar_LDADD = $(LDADD)
am_propsheet_OBJECTS = propsheet.$(OBJEXT)
propsheet_OBJECTS = $(am_propsheet_OBJECTS)
propsheet_LDADD = $(LDADD)
am_scrnsaver_OBJECTS = scrnsaver.$(OBJEXT)
scrnsaver_OBJECTS = $(am_scrnsaver_OBJECTS)
scrnsaver_LDADD = $(LDADD)
am_scrollbar_OBJECTS = scrollbar.$(OBJEXT)
scrollbar_OBJECTS = $(am_scrollbar_OBJECTS)
scrollbar_LDADD = $(LDADD)
am_scrollview_OBJECTS = scrollview.$(OBJEXT)
scrollview_OBJECTS = $(am_scrollview_OBJECTS)
scrollview_LDADD = $(LDADD)
am_scrollwnd_OBJECTS = scrollwnd.$(OBJEXT)
scrollwnd_OBJECTS = $(am_scrollwnd_OBJECTS)
scrollwnd_LDADD = $(LDADD)
am_scrollwnd2_OBJECTS = scrollwnd2.$(OBJEXT)
scrollwnd2_OBJECTS = $(am_scrollwnd2_OBJECTS)
scrollwnd2_LDADD = $(LDADD)
am_simplekey_OBJECTS = simplekey.$(OBJEXT)
simplekey_OBJECTS = $(am_simplekey_OBJECTS)
simplekey_LDADD = $(LDADD)
am_skindemo_OBJECTS = skindemo.$(OBJEXT)
skindemo_OBJECTS = $(am_skindemo_OBJECTS)
skindemo_DEPENDENCIES =
am_spinbox_OBJECTS = spinbox.$(OBJEXT)
spinbox_OBJECTS = $(am_spinbox_OBJECTS)
spinbox_DEPENDENCIES =
am_static_OBJECTS = static.$(OBJEXT)
static_OBJECTS = $(am_static_OBJECTS)
static_LDADD = $(LDADD)
am_stretchblt_OBJECTS = stretchblt.$(OBJEXT)
stretchblt_OBJECTS = $(am_stretchblt_OBJECTS)
stretchblt_LDADD = $(LDADD)
am_timeeditor_OBJECTS = timeeditor.$(OBJEXT)
timeeditor_OBJECTS = $(am_timeeditor_OBJECTS)
timeeditor_DEPENDENCIES =
am_trackbar_OBJECTS = trackbar.$(OBJEXT)
trackbar_OBJECTS = $(am_trackbar_OBJECTS)
trackbar_LDADD = $(LDADD)
am_treeview_OBJECTS = treeview.$(OBJEXT)
treeview_OBJECTS = $(am_treeview_OBJECTS)
treeview_DEPENDENCIES =
DEFAULT_INCLUDES = -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = animation.c $(bitblt_SOURCES) $(bmpbkgnd_SOURCES) \
	$(button_SOURCES) $(capture_SOURCES) $(caretdemo_SOURCES) \
	$(combobox_SOURCES) $(coolbar_SOURCES) $(createicon_SOURCES) \
	$(cursordemo_SOURCES) $(dialogbox_SOURCES) $(drawicon_SOURCES) \
	$(edit_SOURCES) $(gridview_SOURCES) $(gridview_ext_SOURCES) \
	$(helloworld_SOURCES) $(iconview_SOURCES) $(input_SOURCES) \
	$(listbox_SOURCES) $(listview_SOURCES) $(loadbmp_SOURCES) \
	$(menubutton_SOURCES) $(mginit_SOURCES) $(monthcal_SOURCES) \
	$(mycontrol_SOURCES) $(mywins_SOURCES) $(newtoolbar_SOURCES) \
	$(painter_SOURCES) $(progressbar_SOURCES) $(propsheet_SOURCES) \
	$(scrnsaver_SOURCES) $(scrollbar_SOURCES) \
	$(scrollview_SOURCES) $(scrollwnd_SOURCES) \
	$(scrollwnd2_SOURCES) $(simplekey_SOURCES) $(skindemo_SOURCES) \
	$(spinbox_SOURCES) $(static_SOURCES) $(stretchblt_SOURCES) \
	$(timeeditor_SOURCES) $(trackbar_SOURCES) $(treeview_SOURCES)
DIST_SOURCES = animation.c $(bitblt_SOURCES) $(bmpbkgnd_SOURCES) \
	$(button_SOURCES) $(capture_SOURCES) $(caretdemo_SOURCES) \
	$(combobox_SOURCES) $(coolbar_SOURCES) $(createicon_SOURCES) \
	$(cursordemo_SOURCES) $(dialogbox_SOURCES) $(drawicon_SOURCES) \
	$(edit_SOURCES) $(gridview_SOURCES) $(gridview_ext_SOURCES) \
	$(helloworld_SOURCES) $(iconview_SOURCES) $(input_SOURCES) \
	$(listbox_SOURCES) $(listview_SOURCES) $(loadbmp_SOURCES) \
	$(menubutton_SOURCES) $(mginit_SOURCES) $(monthcal_SOURCES) \
	$(mycontrol_SOURCES) $(mywins_SOURCES) $(newtoolbar_SOURCES) \
	$(painter_SOURCES) $(progressbar_SOURCES) $(propsheet_SOURCES) \
	$(scrnsaver_SOURCES) $(scrollbar_SOURCES) \
	$(scrollview_SOURCES) $(scrollwnd_SOURCES) \
	$(scrollwnd2_SOURCES) $(simplekey_SOURCES) $(skindemo_SOURCES) \
	$(spinbox_SOURCES) $(static_SOURCES) $(stretchblt_SOURCES) \
	$(timeeditor_SOURCES) $(trackbar_SOURCES) $(treeview_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/ec7987/percy/minigui/mg-samples-1.6.10/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/ec7987/percy/minigui/mg-samples-1.6.10/missing --run tar
AUTOCONF = ${SHELL} /home/ec7987/percy/minigui/mg-samples-1.6.10/missing --run autoconf
AUTOHEADER = ${SHELL} /home/ec7987/percy/minigui/mg-samples-1.6.10/missing --run autoheader
AUTOMAKE = ${SHELL} /home/ec7987/percy/minigui/mg-samples-1.6.10/missing --run automake-1.9
AWK = gawk
CC = /opt/freescale-p2020/usr/local/gcc-4.3.74-eglibc-2.8.74-dp-2/powerpc-none-linux-gnuspe/bin/powerpc-none-linux-gnuspe-gcc
CCDEPMODE = depmode=gcc3
#CFLAGS = -g -O2 -Wall -Wstrict-prototypes -pipe
CFLAGS = -g -O2 -Wall -Wstrict-prototypes -pipe -I/home/ec7987/minigui/release/include -L/home/ec7987/minigui/release/lib -lmgext -lm  -lpthread
CPP = /opt/freescale-p2020/usr/local/gcc-4.3.74-eglibc-2.8.74-dp-2/powerpc-none-linux-gnuspe/bin/powerpc-none-linux-gnuspe-cpp
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"\" -DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE=\"mg-samples\" -DVERSION=\"1.6.10\" -DSTDC_HEADERS=1 -DHAVE_SYS_WAIT_H=1 -DTIME_WITH_SYS_TIME=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_SYS_TIME_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DECL___NOUNIX__=0 -DHAVE_DECL__MGRM_THREADS=0 -DHAVE_DECL__MGRM_PROCESSES=0 -DHAVE_DECL__MGRM_STANDALONE=0 -DHAVE_DECL__USE_NEWGAL=0 -D_LANG_EN=1 -DHAVE_DECL__HAVE_MATH_LIB=0 -DHAVE_DECL__PNG_FILE_SUPPORT=0 -DHAVE_DECL__PNG_FILE_SUPPORT=0 -DHAVE_DECL__JPG_FILE_SUPPORT=0 -DHAVE_DECL__TYPE1_SUPPORT=0 -DHAVE_DECL__TTF_SUPPORT=0 -DHAVE_DECL__FT2_SUPPORT=0
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS =  -lminigui
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/ec7987/percy/minigui/mg-samples-1.6.10/missing --run makeinfo
MGRM_PROCESSES_FALSE = 
MGRM_PROCESSES_TRUE = #
MGRM_STANDALONE_FALSE = 
MGRM_STANDALONE_TRUE = #
MGRM_THREADS_FALSE = 
MGRM_THREADS_TRUE = #
NOUNIX_FALSE = 
NOUNIX_TRUE = #
OBJEXT = o
PACKAGE = mg-samples
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
SET_MAKE = 
SHELL = /bin/sh
STRIP = /opt/freescale-p2020/usr/local/gcc-4.3.74-eglibc-2.8.74-dp-2/powerpc-none-linux-gnuspe/bin/powerpc-none-linux-gnuspe-strip
USE_NEWGAL_FALSE = 
USE_NEWGAL_TRUE = #
VERSION = 1.6.10
ac_ct_CC = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = x86_64-linux
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = powerpc-unknown-linux-gnu
host_alias = ppc-unknown-linux
host_cpu = powerpc
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /home/ec7987/percy/minigui/mg-samples-1.6.10/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/ec7987/temp/minigui/release
program_transform_name = s&^&ppc-unknown-linux-&
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = powerpc-unknown-linux-gnu
target_alias = ppc-unknown-linux
target_cpu = powerpc
target_os = linux-gnu
target_vendor = unknown
COMMON_PROGS = helloworld mycontrol dialogbox simplekey \
                static button combobox edit listbox menubutton progressbar \
				trackbar newtoolbar propsheet \
                scrollbar painter capture bitblt stretchblt loadbmp drawicon \
                createicon caretdemo cursordemo input bmpbkgnd skindemo \
                scrollwnd scrollwnd2 scrollview animation iconview gridview gridview_ext \
                timeeditor listview spinbox monthcal coolbar treeview mywins

NEWGAL_PROGS = 
#NEWGAL_PROGS = 
LITE_PROGS = 
#LITE_PROGS = scrnsaver mginit
helloworld_SOURCES = helloworld.c
mycontrol_SOURCES = mycontrol.c
dialogbox_SOURCES = dialogbox.c
input_SOURCES = input.c
edit_SOURCES = edit.c
listbox_SOURCES = listbox.c
bmpbkgnd_SOURCES = bmpbkgnd.c
bitblt_SOURCES = bitblt.c
stretchblt_SOURCES = stretchblt.c
loadbmp_SOURCES = loadbmp.c
caretdemo_SOURCES = caretdemo.c
cursordemo_SOURCES = cursordemo.c
createicon_SOURCES = createicon.c
drawicon_SOURCES = drawicon.c
simplekey_SOURCES = simplekey.c
capture_SOURCES = capture.c
painter_SOURCES = painter.c
scrollbar_SOURCES = scrollbar.c
static_SOURCES = static.c
button_SOURCES = button.c
combobox_SOURCES = combobox.c
menubutton_SOURCES = menubutton.c
progressbar_SOURCES = progressbar.c
trackbar_SOURCES = trackbar.c
newtoolbar_SOURCES = newtoolbar.c
propsheet_SOURCES = propsheet.c
listview_SOURCES = listview.c
spinbox_SOURCES = spinbox.c
monthcal_SOURCES = monthcal.c
coolbar_SOURCES = coolbar.c
timeeditor_SOURCES = timeeditor.c
treeview_SOURCES = treeview.c
scrollwnd_SOURCES = scrollwnd.c
scrollwnd2_SOURCES = scrollwnd2.c
scrollview_SOURCES = scrollview.c
iconview_SOURCES = iconview.c
gridview_SOURCES = gridview.c
gridview_ext_SOURCES = gridview_ext.c
mywins_SOURCES = mywins.c
mginit_SOURCES = mginit.c
scrnsaver_SOURCES = scrnsaver.c
skindemo_SOURCES = skindemo.c
listview_LDADD = -lmgext
iconview_LDADD = -lmgext
spinbox_LDADD = -lmgext
monthcal_LDADD = -lmgext
coolbar_LDADD = -lmgext
timeeditor_LDADD = -lmgext
treeview_LDADD = -lmgext
animation_LDADD = -lmgext
skindemo_LDADD = -lmgext
gridview_LDADD = -lmgext
gridview_ext_LDADD = -lmgext
mywins_LDADD = -lmgext
SUBDIRS = res
EXTRA_DIST = bkgnd.jpg new2.jpg new3.jpg myicon.ico question.ico close.png  pause.png  progress-bk.png  stop.png     timer.png      volume.png \
main.png   play.png   progress.png     sysmenu.png  volume-bk.png banner.gif 9.gif

all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
animation$(EXEEXT): $(animation_OBJECTS) $(animation_DEPENDENCIES) 
	@rm -f animation$(EXEEXT)
	$(LINK) $(animation_LDFLAGS) $(animation_OBJECTS) $(animation_LDADD) $(LIBS)
bitblt$(EXEEXT): $(bitblt_OBJECTS) $(bitblt_DEPENDENCIES) 
	@rm -f bitblt$(EXEEXT)
	$(LINK) $(bitblt_LDFLAGS) $(bitblt_OBJECTS) $(bitblt_LDADD) $(LIBS)
bmpbkgnd$(EXEEXT): $(bmpbkgnd_OBJECTS) $(bmpbkgnd_DEPENDENCIES) 
	@rm -f bmpbkgnd$(EXEEXT)
	$(LINK) $(bmpbkgnd_LDFLAGS) $(bmpbkgnd_OBJECTS) $(bmpbkgnd_LDADD) $(LIBS)
button$(EXEEXT): $(button_OBJECTS) $(button_DEPENDENCIES) 
	@rm -f button$(EXEEXT)
	$(LINK) $(button_LDFLAGS) $(button_OBJECTS) $(button_LDADD) $(LIBS)
capture$(EXEEXT): $(capture_OBJECTS) $(capture_DEPENDENCIES) 
	@rm -f capture$(EXEEXT)
	$(LINK) $(capture_LDFLAGS) $(capture_OBJECTS) $(capture_LDADD) $(LIBS)
caretdemo$(EXEEXT): $(caretdemo_OBJECTS) $(caretdemo_DEPENDENCIES) 
	@rm -f caretdemo$(EXEEXT)
	$(LINK) $(caretdemo_LDFLAGS) $(caretdemo_OBJECTS) $(caretdemo_LDADD) $(LIBS)
combobox$(EXEEXT): $(combobox_OBJECTS) $(combobox_DEPENDENCIES) 
	@rm -f combobox$(EXEEXT)
	$(LINK) $(combobox_LDFLAGS) $(combobox_OBJECTS) $(combobox_LDADD) $(LIBS)
coolbar$(EXEEXT): $(coolbar_OBJECTS) $(coolbar_DEPENDENCIES) 
	@rm -f coolbar$(EXEEXT)
	$(LINK) $(coolbar_LDFLAGS) $(coolbar_OBJECTS) $(coolbar_LDADD) $(LIBS)
createicon$(EXEEXT): $(createicon_OBJECTS) $(createicon_DEPENDENCIES) 
	@rm -f createicon$(EXEEXT)
	$(LINK) $(createicon_LDFLAGS) $(createicon_OBJECTS) $(createicon_LDADD) $(LIBS)
cursordemo$(EXEEXT): $(cursordemo_OBJECTS) $(cursordemo_DEPENDENCIES) 
	@rm -f cursordemo$(EXEEXT)
	$(LINK) $(cursordemo_LDFLAGS) $(cursordemo_OBJECTS) $(cursordemo_LDADD) $(LIBS)
dialogbox$(EXEEXT): $(dialogbox_OBJECTS) $(dialogbox_DEPENDENCIES) 
	@rm -f dialogbox$(EXEEXT)
	$(LINK) $(dialogbox_LDFLAGS) $(dialogbox_OBJECTS) $(dialogbox_LDADD) $(LIBS)
drawicon$(EXEEXT): $(drawicon_OBJECTS) $(drawicon_DEPENDENCIES) 
	@rm -f drawicon$(EXEEXT)
	$(LINK) $(drawicon_LDFLAGS) $(drawicon_OBJECTS) $(drawicon_LDADD) $(LIBS)
edit$(EXEEXT): $(edit_OBJECTS) $(edit_DEPENDENCIES) 
	@rm -f edit$(EXEEXT)
	$(LINK) $(edit_LDFLAGS) $(edit_OBJECTS) $(edit_LDADD) $(LIBS)
gridview$(EXEEXT): $(gridview_OBJECTS) $(gridview_DEPENDENCIES) 
	@rm -f gridview$(EXEEXT)
	$(LINK) $(gridview_LDFLAGS) $(gridview_OBJECTS) $(gridview_LDADD) $(LIBS)
gridview_ext$(EXEEXT): $(gridview_ext_OBJECTS) $(gridview_ext_DEPENDENCIES) 
	@rm -f gridview_ext$(EXEEXT)
	$(LINK) $(gridview_ext_LDFLAGS) $(gridview_ext_OBJECTS) $(gridview_ext_LDADD) $(LIBS)
helloworld$(EXEEXT): $(helloworld_OBJECTS) $(helloworld_DEPENDENCIES) 
	@rm -f helloworld$(EXEEXT)
	$(LINK) $(helloworld_LDFLAGS) $(helloworld_OBJECTS) $(helloworld_LDADD) $(LIBS)
iconview$(EXEEXT): $(iconview_OBJECTS) $(iconview_DEPENDENCIES) 
	@rm -f iconview$(EXEEXT)
	$(LINK) $(iconview_LDFLAGS) $(iconview_OBJECTS) $(iconview_LDADD) $(LIBS)
input$(EXEEXT): $(input_OBJECTS) $(input_DEPENDENCIES) 
	@rm -f input$(EXEEXT)
	$(LINK) $(input_LDFLAGS) $(input_OBJECTS) $(input_LDADD) $(LIBS)
listbox$(EXEEXT): $(listbox_OBJECTS) $(listbox_DEPENDENCIES) 
	@rm -f listbox$(EXEEXT)
	$(LINK) $(listbox_LDFLAGS) $(listbox_OBJECTS) $(listbox_LDADD) $(LIBS)
listview$(EXEEXT): $(listview_OBJECTS) $(listview_DEPENDENCIES) 
	@rm -f listview$(EXEEXT)
	$(LINK) $(listview_LDFLAGS) $(listview_OBJECTS) $(listview_LDADD) $(LIBS)
loadbmp$(EXEEXT): $(loadbmp_OBJECTS) $(loadbmp_DEPENDENCIES) 
	@rm -f loadbmp$(EXEEXT)
	$(LINK) $(loadbmp_LDFLAGS) $(loadbmp_OBJECTS) $(loadbmp_LDADD) $(LIBS)
menubutton$(EXEEXT): $(menubutton_OBJECTS) $(menubutton_DEPENDENCIES) 
	@rm -f menubutton$(EXEEXT)
	$(LINK) $(menubutton_LDFLAGS) $(menubutton_OBJECTS) $(menubutton_LDADD) $(LIBS)
mginit$(EXEEXT): $(mginit_OBJECTS) $(mginit_DEPENDENCIES) 
	@rm -f mginit$(EXEEXT)
	$(LINK) $(mginit_LDFLAGS) $(mginit_OBJECTS) $(mginit_LDADD) $(LIBS)
monthcal$(EXEEXT): $(monthcal_OBJECTS) $(monthcal_DEPENDENCIES) 
	@rm -f monthcal$(EXEEXT)
	$(LINK) $(monthcal_LDFLAGS) $(monthcal_OBJECTS) $(monthcal_LDADD) $(LIBS)
mycontrol$(EXEEXT): $(mycontrol_OBJECTS) $(mycontrol_DEPENDENCIES) 
	@rm -f mycontrol$(EXEEXT)
	$(LINK) $(mycontrol_LDFLAGS) $(mycontrol_OBJECTS) $(mycontrol_LDADD) $(LIBS)
mywins$(EXEEXT): $(mywins_OBJECTS) $(mywins_DEPENDENCIES) 
	@rm -f mywins$(EXEEXT)
	$(LINK) $(mywins_LDFLAGS) $(mywins_OBJECTS) $(mywins_LDADD) $(LIBS)
newtoolbar$(EXEEXT): $(newtoolbar_OBJECTS) $(newtoolbar_DEPENDENCIES) 
	@rm -f newtoolbar$(EXEEXT)
	$(LINK) $(newtoolbar_LDFLAGS) $(newtoolbar_OBJECTS) $(newtoolbar_LDADD) $(LIBS)
painter$(EXEEXT): $(painter_OBJECTS) $(painter_DEPENDENCIES) 
	@rm -f painter$(EXEEXT)
	$(LINK) $(painter_LDFLAGS) $(painter_OBJECTS) $(painter_LDADD) $(LIBS)
progressbar$(EXEEXT): $(progressbar_OBJECTS) $(progressbar_DEPENDENCIES) 
	@rm -f progressbar$(EXEEXT)
	$(LINK) $(progressbar_LDFLAGS) $(progressbar_OBJECTS) $(progressbar_LDADD) $(LIBS)
propsheet$(EXEEXT): $(propsheet_OBJECTS) $(propsheet_DEPENDENCIES) 
	@rm -f propsheet$(EXEEXT)
	$(LINK) $(propsheet_LDFLAGS) $(propsheet_OBJECTS) $(propsheet_LDADD) $(LIBS)
scrnsaver$(EXEEXT): $(scrnsaver_OBJECTS) $(scrnsaver_DEPENDENCIES) 
	@rm -f scrnsaver$(EXEEXT)
	$(LINK) $(scrnsaver_LDFLAGS) $(scrnsaver_OBJECTS) $(scrnsaver_LDADD) $(LIBS)
scrollbar$(EXEEXT): $(scrollbar_OBJECTS) $(scrollbar_DEPENDENCIES) 
	@rm -f scrollbar$(EXEEXT)
	$(LINK) $(scrollbar_LDFLAGS) $(scrollbar_OBJECTS) $(scrollbar_LDADD) $(LIBS)
scrollview$(EXEEXT): $(scrollview_OBJECTS) $(scrollview_DEPENDENCIES) 
	@rm -f scrollview$(EXEEXT)
	$(LINK) $(scrollview_LDFLAGS) $(scrollview_OBJECTS) $(scrollview_LDADD) $(LIBS)
scrollwnd$(EXEEXT): $(scrollwnd_OBJECTS) $(scrollwnd_DEPENDENCIES) 
	@rm -f scrollwnd$(EXEEXT)
	$(LINK) $(scrollwnd_LDFLAGS) $(scrollwnd_OBJECTS) $(scrollwnd_LDADD) $(LIBS)
scrollwnd2$(EXEEXT): $(scrollwnd2_OBJECTS) $(scrollwnd2_DEPENDENCIES) 
	@rm -f scrollwnd2$(EXEEXT)
	$(LINK) $(scrollwnd2_LDFLAGS) $(scrollwnd2_OBJECTS) $(scrollwnd2_LDADD) $(LIBS)
simplekey$(EXEEXT): $(simplekey_OBJECTS) $(simplekey_DEPENDENCIES) 
	@rm -f simplekey$(EXEEXT)
	$(LINK) $(simplekey_LDFLAGS) $(simplekey_OBJECTS) $(simplekey_LDADD) $(LIBS)
skindemo$(EXEEXT): $(skindemo_OBJECTS) $(skindemo_DEPENDENCIES) 
	@rm -f skindemo$(EXEEXT)
	$(LINK) $(skindemo_LDFLAGS) $(skindemo_OBJECTS) $(skindemo_LDADD) $(LIBS)
spinbox$(EXEEXT): $(spinbox_OBJECTS) $(spinbox_DEPENDENCIES) 
	@rm -f spinbox$(EXEEXT)
	$(LINK) $(spinbox_LDFLAGS) $(spinbox_OBJECTS) $(spinbox_LDADD) $(LIBS)
static$(EXEEXT): $(static_OBJECTS) $(static_DEPENDENCIES) 
	@rm -f static$(EXEEXT)
	$(LINK) $(static_LDFLAGS) $(static_OBJECTS) $(static_LDADD) $(LIBS)
stretchblt$(EXEEXT): $(stretchblt_OBJECTS) $(stretchblt_DEPENDENCIES) 
	@rm -f stretchblt$(EXEEXT)
	$(LINK) $(stretchblt_LDFLAGS) $(stretchblt_OBJECTS) $(stretchblt_LDADD) $(LIBS)
timeeditor$(EXEEXT): $(timeeditor_OBJECTS) $(timeeditor_DEPENDENCIES) 
	@rm -f timeeditor$(EXEEXT)
	$(LINK) $(timeeditor_LDFLAGS) $(timeeditor_OBJECTS) $(timeeditor_LDADD) $(LIBS)
trackbar$(EXEEXT): $(trackbar_OBJECTS) $(trackbar_DEPENDENCIES) 
	@rm -f trackbar$(EXEEXT)
	$(LINK) $(trackbar_LDFLAGS) $(trackbar_OBJECTS) $(trackbar_LDADD) $(LIBS)
treeview$(EXEEXT): $(treeview_OBJECTS) $(treeview_DEPENDENCIES) 
	@rm -f treeview$(EXEEXT)
	$(LINK) $(treeview_LDFLAGS) $(treeview_OBJECTS) $(treeview_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/animation.Po
include ./$(DEPDIR)/bitblt.Po
include ./$(DEPDIR)/bmpbkgnd.Po
include ./$(DEPDIR)/button.Po
include ./$(DEPDIR)/capture.Po
include ./$(DEPDIR)/caretdemo.Po
include ./$(DEPDIR)/combobox.Po
include ./$(DEPDIR)/coolbar.Po
include ./$(DEPDIR)/createicon.Po
include ./$(DEPDIR)/cursordemo.Po
include ./$(DEPDIR)/dialogbox.Po
include ./$(DEPDIR)/drawicon.Po
include ./$(DEPDIR)/edit.Po
include ./$(DEPDIR)/gridview.Po
include ./$(DEPDIR)/gridview_ext.Po
include ./$(DEPDIR)/helloworld.Po
include ./$(DEPDIR)/iconview.Po
include ./$(DEPDIR)/input.Po
include ./$(DEPDIR)/listbox.Po
include ./$(DEPDIR)/listview.Po
include ./$(DEPDIR)/loadbmp.Po
include ./$(DEPDIR)/menubutton.Po
include ./$(DEPDIR)/mginit.Po
include ./$(DEPDIR)/monthcal.Po
include ./$(DEPDIR)/mycontrol.Po
include ./$(DEPDIR)/mywins.Po
include ./$(DEPDIR)/newtoolbar.Po
include ./$(DEPDIR)/painter.Po
include ./$(DEPDIR)/progressbar.Po
include ./$(DEPDIR)/propsheet.Po
include ./$(DEPDIR)/scrnsaver.Po
include ./$(DEPDIR)/scrollbar.Po
include ./$(DEPDIR)/scrollview.Po
include ./$(DEPDIR)/scrollwnd.Po
include ./$(DEPDIR)/scrollwnd2.Po
include ./$(DEPDIR)/simplekey.Po
include ./$(DEPDIR)/skindemo.Po
include ./$(DEPDIR)/spinbox.Po
include ./$(DEPDIR)/static.Po
include ./$(DEPDIR)/stretchblt.Po
include ./$(DEPDIR)/timeeditor.Po
include ./$(DEPDIR)/trackbar.Po
include ./$(DEPDIR)/treeview.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS)
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am:

install-exec-am:

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-info-am

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-generic clean-noinstPROGRAMS clean-recursive ctags \
	ctags-recursive distclean distclean-compile distclean-generic \
	distclean-recursive distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-recursive pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-am uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
